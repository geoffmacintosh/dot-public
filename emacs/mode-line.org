#+title: Mode-line

* Minions
#+begin_src emacs-lisp :tangle no
  (use-package minions
    :straight t
    :config
    (minions-mode))
#+end_src

* Eldoc

[[https://www.reddit.com/r/emacs/comments/c1zl0s/weekly_tipstricketc_thread/ergullj/?context=1][Improve eldoc's documentation]]

#+begin_src emacs-lisp
  (use-package eldoc
    :straight t
    :custom
    (eldoc-echo-area-use-multiline-p t)
    (eldoc-idle-delay 0)
    :config
    (define-advice elisp-get-fnsym-args-string (:around (orig-fun sym &rest r) docstring)
      "If SYM is a function, append its docstring."
      (require 'subr-x)
      (concat
       (apply orig-fun sym r)
       (when-let ((doc (and (fboundp sym) (documentation sym 'raw)))
                  (oneline (substring doc 0 (string-match "\n" doc))))
         (when (not (string= "" oneline))
           (concat " " (propertize oneline 'face 'italic)))))))
#+end_src
* Modeline

#+begin_src emacs-lisp :tangle no
  (setq-default mode-line-format
                (list
                 "%e "
                 "%I "
                 "%p "
                 (propertize "%b " 'face 'font-lock-keyword-face)
                 "%m "
                 mode-line-misc-info))
#+end_src

#+results:
| %e | %I | %p | %b | %m | ((which-function-mode (which-func-mode ( which-func-format  ))) (global-mode-string ( global-mode-string  ))) |

#+begin_src emacs-lisp :tangle no
  (setq-default mode-line-format
                (list
                 (propertize (downcase " %m ") 'face 'font-lock-string-face))))
#+end_src

* References
- [[https://occasionallycogent.com/custom_emacs_modeline/index.html][Custom Emacs Modeline]]
