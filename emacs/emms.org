* EMMS
#+begin_src emacs-lisp
  (use-package emms
    :straight t
    :config
    (require 'emms-setup)
    (emms-all)
    ;;(emms-default-players)
    :custom
    (emms-player-list '(emms-player-mpv))
    (emms-source-file-default-directory "~/Music/iTunes/iTunes Music/Music/"))
#+end_src

* Emms
:PROPERTIES:
:header-args: :tangle no
:END:

#+begin_src emacs-lisp
  (autoload 'emms-setup "emms-setup" "" t nil)
  ;; (emms-minimalist)
  ;; (emms-standard)
  ;; (emms-all)
  (emms-devel)
  (emms-default-players)
  (setq emms-source-file-default-directory "~/Music/"
        emms-stream-bookmarks-file (concat dotfiles-dir "emms-streams")
        emms-player-mpg321-command-name "mpg321"
        emms-player-mplayer-command-name "mplayer"
        emms-player-mplayer-playlist-command-name "mplayer"
        ibuffer-truncate-lines t
        ibuffer-use-other-window nil
        emms-stream-info-format-string "NS: %s"
        emms-stream-default-action "play"
        emms-stream-popup-default-height 120
        )
#+end_src

Ensure EMMS doesn't swap out mpv windows while playing multiple files in playlist:

https://www.reddit.com/r/emacs/comments/fo8pia/emms_keep_same_mpv_player_throughout_playlist/

In ~/.config/mpv/mpv.conf, add no-keepaspect-window and force-window=yes.
Then in ~/.config/mpv/scripts, add the following lua script: (mpv_geometry_freezer.lua)

https://gist.github.com/TheAMM/5e07ad787dd95d76131b61840f403a79

#+begin_src lua

  --[[
          mpv_geometry_freezer.lua
          Sets the geometry property when window size changes,
          avoiding Windows' maximized windows detaching.
          - AMM
  ]]--
  local msg = require 'mp.msg'

  local UPDATE_INTERVAL = 0.5
  local screen_w, screen_h = mp.get_osd_size()

  mp.add_periodic_timer(UPDATE_INTERVAL, function()
          local new_screen_w, new_screen_h = mp.get_osd_size()
          if new_screen_w ~= screen_w or new_screen_h ~= screen_h then
                  screen_w = new_screen_w
                  screen_h = new_screen_h

                  local geom_string = ("%dx%d"):format(screen_w, screen_h)
                  msg.debug("OSD resized: " .. geom_string .. ", setting geometry property")
                  mp.set_property_native("geometry", geom_string)
          end
  end)
#+end_src

https://www.reddit.com/r/emacs/comments/8b0dqx/emms_updates_mpv_backend_opus_orgstyle_bindings/

#+begin_src emacs-lisp
  (require 'emms)

  (emms-all)
  (emms-history-load)
  (setq emms-player-list (list emms-player-mpv)
        emms-source-file-default-directory (expand-file-name "~/music")
        emms-source-file-directory-tree-function 'emms-source-file-directory-tree-find
        emms-browser-covers 'emms-browser-cache-thumbnail)
  (add-to-list 'emms-player-mpv-parameters "--no-audio-display")
  (add-to-list 'emms-info-functions 'emms-info-cueinfo)
  (if (executable-find "emms-print-metadata")
      (progn
        (require 'emms-info-libtag)
        (add-to-list 'emms-info-functions 'emms-info-libtag)
        (delete 'emms-info-ogginfo emms-info-functions)
        (delete 'emms-info-mp3info emms-info-functions))
    (add-to-list 'emms-info-functions 'emms-info-ogginfo)
    (add-to-list 'emms-info-functions 'emms-info-mp3info))

  (defun ambrevar/emms-play-on-add (old-pos)
    "Play tracks when calling `emms-browser-add-tracks' if nothing
  is currently playing."
    (interactive)
    (when (or (not emms-player-playing-p)
              emms-player-paused-p
              emms-player-stopped-p)
      (with-current-emms-playlist
        (goto-char old-pos)
        ;; if we're sitting on a group name, move forward
        (unless (emms-playlist-track-at (point))
          (emms-playlist-next))
        (emms-playlist-select (point)))
      (emms-stop)
      (emms-start)))
  (add-hook 'emms-browser-tracks-added-hook 'ambrevar/emms-play-on-add)
#+end_src

#+begin_src emacs-lisp
  (defhydra hydra-media-player (:color amaranth :hint nil)
    "
  Currently playing: %s(emms-track-description (emms-playlist-current-selected-track)) [TODO loopstate].
  Next up: TODO
  Previous: TODO

  ^Playback control^      ^^Volume: xxx^^          ^Playlist management^    ^Other^
  --------------------------------------------------------------------------------
  _n_: next               _+_, _=_: louder         _<f11>_: emms list       _q_: quit
  _p_: previous           _-_: quieter^^           ^ ^                      _g_: refresh
  _l_: TODO toggle loop   ^ ^ ^ ^                  ^ ^                      _m_: mute
  _SPC_: %s(if emms-player-paused-p \"unpause\" \"pause  \")
  _s_: stop
  "
    ("n" emms-next)
    ("p" emms-previous)
    ("l" "TODO looping")
    ("SPC" emms-pause)
    ("s" emms-stop)
    ("+" emms-volume-raise)
    ("=" emms-volume-raise)
    ("-" emms-volume-lower)
    ("m" "TODO muting")
    ("<f11>" emms :color blue)
    ("q" nil :color blue)
    ("g" "refresh"))

  ;;; FIXME if stopped, SPC should show "play", and Currently playing should show "To play" or sth.

  (global-set-key (kbd "<f11>") 'hydra-media-player/body)
#+end_src
